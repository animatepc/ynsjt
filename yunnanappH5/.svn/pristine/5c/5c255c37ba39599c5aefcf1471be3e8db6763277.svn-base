<template>
    <div class="videoChannel">
        <div class="videodetails_back" @click="city_back">
            <i class="videodetails_icon" ></i>
        </div>    
        <div class="videodetails_video _cus_posRelative">
            <div class="video">
                <img style="height: 4rem" alt="">
            </div>
            <p class="new_wrap perW100 _cus_flexContent _cus_jusContent">
                <span>
                    <span>{{newsdetails_msg.title}}</span>
                </span>
                <span>
                    <img src="../../../static/imgs/collect.png" alt="">
                    <span>{{newsdetails_msg.clickTimes}}</span>
                    <i class="news_watch"></i>
                </span>
            </p>
            <p class="_cus_flexContent _cus_jusContent _cus_fleAlignCen _cus_overHidden">
                <span>
                    <span>{{newsdetails_msg.watchDate}}</span>
                    <span></span>
                </span>                  
                <span class="" @click="isIcon = !isIcon">
                    简介 
                    <i class="video_icon" :class="isIcon?'video_icon_action':''"> 
                    </i>
                </span>
            </p>
            <div class="video_introduce _cus_overHidden" :class="isIcon?'Block':'None'">
                <span>{{newsdetails_msg.introduction}}</span>
            </div>
        </div>
        <div class="videodetails_introduce">
        	<scroller
            :lock-x="true"
            :scrollbarY="true"
            :bounce="true">
        	<div class="_cus_overHidden video_content">
	            <div class="_cus_overHidden">
	                <p class="news_footer_title">往期节目</p>
	            </div>
	            
	            <ul class="home_list _cus_overHidden">
                        <li v-for="(item,keys) in newslists" :key="keys" class="_cus_flexContent" @click="Details_back(item)">
                            <div class="_cus_overHidden __cus_fl _cus_flex1 _cus_posRelative">
                                <span v-show="item.type =='tab'" class="source-handle-title">专题</span>
                                <label class="source-label">{{item.listTitle}}</label>
                                <div class="tabImg" v-if="item.urlList.length > 0" v-show="item.type == 'tab' || item.type == 'tabVideo'" :class="(item.type=='tabList' || item.type == 'tabVideo')?'_cus_posRelative':''">
                                    <div class="list_live" v-show="item.isLive == '1'" :class="item.liveStatus == '0'?'live_state':item.liveStatus == '20'?'live_state':'live_loading'">{{item.liveStatus == '0'?'未开始':item.liveStatus == '10'?'直播中':item.liveStatus == '20'?'已结束':item.liveStatus == '30'?'直播预告':item.liveStatus == '40'?'直播回看':''}}</div>
                                    <img class="" :src="item.urlList[0]" alt="">
                                    <i class="video_playicon" v-show="item.type =='tabVideo'"></i>
                                </div>
                                 <div  v-if="item.urlList.length > 0" v-show="item.type == 'tabTranslate'" class="_cus_overHidden tabTranslate">
                                    <ul class="_cus_flexContent _cus_jusContent home_atlas">
                                        <li v-for="(img,keys) in item.urlList" :key="keys" class="_cus_flex1">
                                            <img :src="img" alt="">
                                        </li>
                                    </ul>
                                </div>
                                <p class="home_time _cus_overHidden perW100 color999">
                                   <span v-show="item.topFlag == '1'" class="source-handle-title">置顶</span>
                                    <span class="__cus_fl">
                                        <span>{{item.source}}</span>
                                        <span class="">{{item.createTimeStr}}</span>
                                    </span>
                                    <span class="__cus_fr">
                                        <span>{{item.virtualClickTimes}}</span>
                                        <span class="new_watch"></span>
                                    </span>
                                </p>
                            </div>
                            <div v-if="item.urlList.length > 0" v-show="item.type == 'list' || item.type == 'tabList' || item.type == 'tabAudio'" class="_cus_overHidden __cus_fr imageNews-img">
                                <img :src="item.urlList[0]" alt="">
                                <i class="audio_icon" v-show="item.type == 'tabAudio'"></i>
                            </div>
                        </li>
                    </ul>
        	</div>
        	</scroller>
        </div>
    </div>
</template>
<script>
import { HttpService } from "../../services/http.js";
import { newsApi } from "../../services/newsApi.js";
import { Collection } from "../../common/js/common.js";
export default {
  data() {
    return {
      isIcon: false,
      isHide: false,
      newsdetails_msg: {},
      newslists: [],
      videoAddress: "",
      liveStatus: ""
    };
  },
  mounted() {
    this.getWatchList();
  },
  methods: {
    collection() {
      var id = this.$router.history.current.query.id;
      let bodys = {};
      bodys.refId = id;
      bodys.refType = this.$router.history.current.query.refType;
      Collection.save(bodys).then(r => {
        if (r.status && r.statusCode == "200") {
          console.log("接口调用成功");
        } else {
          alert("接口调用失败");
          console.log("接口调用失败");
        }
      });
    },
    getWatchList() {
      let params = this.$router.history.current.query;
      let  bodys = {};
       bodys = Object.assign(bodys,params)
      newsApi.watchList(bodys).then(r => {
        if (r.status && r.statusCode == "200") {
          this.newsdetails_msg = r.data;
        } else {
          this.newsdetails_msg = {};
          this.newslists = [];
        }
        this.getNewsList();
      });
    },
    getNewsList() {
      let params = this.$router.history.current.query;
      params = Object.assign(params, {
        _jsonp: true,
        _jsonpCallback: "onBack"
      });
      console.log(params.id);
      let bodys = {
        id: params.id,
        _jsonp: true,
        _jsonpCallback: "onBack"
      };
      newsApi.getNewsDetails(bodys).then(r => {
        if (r.status && r.statusCode == "200") {
          this.newsdetails_msg = r.data;
          //视频地址
          this.videoAddress = r.data.videoAddress;
          //直播状态:0未开始 10直播中 20已结束 30直播预告 40直播回看
          this.liveStatus = r.data.liveStatus;
          let data = r.data.contentList;
          for (var i = 0; i < data.length; i++) {
            console.log(data[i].contentType);
            switch (data[i].contentType) {
              case "30":
                data[i]["type"] = "tabVideo";
                break;
              case "10":
                data[i]["type"] = "list";
                break;
              case "40":
                data[i]["type"] = "tabAudio";
                break;
              case "20":
                data[i]["type"] = "tabTranslate";
                break;
              case "60":
                data[i]["type"] = "tab";
                break;
              case "50":
                data[i]["type"] = "tabList";
                break;
            }
          }
          this.newslists = r.list;
          console.log(this.newslists);
          this.getWatchList();
        } else {
          this.newsdetails_msg = {};
        }
      });
    },
    city_back() {
      this.$router.go(-1);
    },
    Details_back(items) {
      let data = items.contentType;
      let path = "";
      switch (data) {
        case "30":
          path = "/videodetails";
          break;
        case "10":
          path = "/newsdetails";
          break;
        case "20":
          path = "/atlasdetails";
          break;
        case "40":
          path = "/audiodetails";
          break;
        case "60":
          path = "/specialdetails";
          break;
        case "50":
          items.seriesType == "0"
            ? (path = "/programdetails")
            : items.seriesType == "10" ? (path = "/videochannel") : "";
          break;
      }
      let Json = {
        refType: items.contentType,
        id: items.id,
        columnCode: items.columnCode
      };
      this.getNewsList();
      this.$router.push({
        path: `/public${path}`,
        query: Json
      });
    }
  }
};
</script>
<style lang="less">
.videoChannel {
  height: 100vh;
  overflow: hidden;
  .videodetails_back {
    width: 0.6rem;
    height: 0.6rem;
    background: rgba(0, 0, 0, 0.5);
    border-radius: 50%;
    position: fixed;
    left: 0.2rem;
    top: 0.2rem;
    z-index: 1000;
    .videodetails_icon {
      width: 0.36rem;
      height: 0.36rem;
      background: url("../../../static/imgs/back.png") center center no-repeat;
      background-size: contain;
      display: block;
      position: absolute;
      left: 0;
      right: 0;
      top: 0;
      bottom: 0;
      margin: auto;
    }
  }
  .videodetails_video {
    width: 100%;
    z-index: 99;
    background: #fff;
    border: 2px solid #eee;
    .video {
      > img {
        width: 100%;
      }
    }
    > .new_wrap {
      color: #b3b3b3;
      overflow: hidden;
      padding: 0 0.3rem 0.3rem 0.3rem;
      line-height: 0.34rem;
      > span:last-child {
        > img {
          width: 0.3rem;
          height: 0.3rem;
          display: block;
          float: left;
          margin-left: 0.03rem;
          margin-right: 0.5rem;
          transform: rotate(0deg) !important;
        }
        > .news_watch {
          display: inline-block;
          width: 0.29rem;
          height: 0.2rem;
          margin-bottom: 0.04rem;
          display: inline-block;
          vertical-align: middle;
          margin-left: 0.1rem;
          background: url(../../../static/imgs/eye.png) no-repeat left center;
          background-size: 100%;
        }
      }
    }
    > p:nth-of-type(2),
    > p:nth-of-type(3) {
      padding: 0 0.3rem;
      overflow: hidden;
      min-height: 0.84rem;
      line-height: 0.84rem;
      .video_icon {
        display: inline-block;
        width: 0.22rem;
        height: 0.22rem;
        transform: rotate(90deg);
        transition: all 0.5s;
        background: url("../../../static/imgs/arroe.png") no-repeat;
        background-size: contain;
      }
      .video_icon_action {
        transform: rotate(180deg);
      }
    }
    .video_introduce {
      height: auto;
      padding: 0.1rem 0.45rem;
      .program_list {
        height: auto;
        overflow: hidden;
        > li {
          display: inline-block;
          width: 2rem;
          height: 0.72rem;
          line-height: 0.72rem;
          border: 1px solid #bfbfbf;
          border-radius: 0.04rem;
          margin-right: 0.2rem;
          margin-bottom: 0.3rem;
          text-align: center;
          box-sizing: border-box;
        }
        > li:nth-child(3n) {
          margin-right: 0;
        }
      }
    }
    .Block {
      display: block;
    }
    .None {
      display: none;
    }
  }
  .videodetails_introduce {
    background-color: #fff;
    color: #999;
    .video_content {
      > div:nth-of-type(1) {
        padding: 0 0.3rem;
        .news_footer_title {
          padding: 0 0.25rem;
          height: 0.8rem;
          background: #ffffff;
          color: #666;
          border-bottom: solid 2px #eee;
          line-height: 0.8rem;
        }
      }
    }
  }
}
</style>

